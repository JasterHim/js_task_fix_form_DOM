{"mappings":"ACEA,IAAM,EAAS,SAAS,gBAAgB,CAAC,cAQnC,EAAY,SAAC,CADlB,EAEC,IAAI,EAAe,GAEd,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACE,EAEM,IAAS,EAAK,WAAW,GAClC,GAAiB,IAAQ,MAAA,CAAL,GAEpB,GAAgB,EAJhB,GAAgB,EAAK,WAAW,EAMpC,C,C,M,E,CARK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAUL,OAAO,CACT,EAEA,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAK,EAAM,YAAY,CAAC,MACxB,EAAW,EAAU,EAAM,YAAY,CAAC,SACxC,EAAQ,SAAS,aAAa,CAAC,SACjC,EAAc,SAAS,aAAa,CAAC,eAEzC,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,YAAY,CAAC,MAAO,GAC1B,EAAM,WAAW,CAAG,EACpB,EAAc,EAEd,EAAM,UAAU,CAAC,YAAY,CAAC,EAAO,GACrC,EAAM,YAAY,CAAC,cAAe,EACpC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar inputs = document.querySelectorAll(\"form input\");\n/**\n *\n * @param {string} str\n *\n * @returns {string}\n */ var normalize = function(str) {\n    var normalizeStr = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = str[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var char = _step.value;\n            if (!normalizeStr) normalizeStr += char.toUpperCase();\n            else if (char === char.toUpperCase()) normalizeStr += \" \".concat(char);\n            else normalizeStr += char;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return normalizeStr;\n};\ninputs.forEach(function(input) {\n    var id = input.getAttribute(\"id\");\n    var nameItem = normalize(input.getAttribute(\"name\"));\n    var label = document.createElement(\"label\");\n    var placeholder = document.createElement(\"placeholder\");\n    label.classList.add(\"field-label\");\n    label.setAttribute(\"for\", id);\n    label.textContent = nameItem;\n    placeholder = nameItem;\n    input.parentNode.insertBefore(label, input);\n    input.setAttribute(\"placeholder\", placeholder);\n});\n\n//# sourceMappingURL=index.a3596f9b.js.map\n","'use strict';\n\nconst inputs = document.querySelectorAll('form input');\n\n/**\n *\n * @param {string} str\n *\n * @returns {string}\n */\nconst normalize = (str) => {\n  let normalizeStr = '';\n\n  for (const char of str) {\n    if (!normalizeStr) {\n      normalizeStr += char.toUpperCase();\n    } else if (char === char.toUpperCase()) {\n      normalizeStr += ` ${char}`;\n    } else {\n      normalizeStr += char;\n    }\n  }\n\n  return normalizeStr;\n};\n\ninputs.forEach((input) => {\n  const id = input.getAttribute('id');\n  const nameItem = normalize(input.getAttribute('name'));\n  const label = document.createElement('label');\n  let placeholder = document.createElement('placeholder');\n\n  label.classList.add('field-label');\n  label.setAttribute('for', id);\n  label.textContent = nameItem;\n  placeholder = nameItem;\n\n  input.parentNode.insertBefore(label, input);\n  input.setAttribute('placeholder', placeholder);\n});\n"],"names":["inputs","document","querySelectorAll","normalize","str","normalizeStr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","char","value","toUpperCase","concat","err","return","forEach","input","id","getAttribute","nameItem","label","createElement","placeholder","classList","add","setAttribute","textContent","parentNode","insertBefore"],"version":3,"file":"index.a3596f9b.js.map"}